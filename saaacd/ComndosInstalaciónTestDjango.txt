Creación de modelos
--ARCHIVOS
http://www.maestrosdelweb.com/curso-django-el-modelo-de-datos/

http://django-book.blogspot.com/2012/11/modelos-un-modelo-es-la-fuente-unica-y.html
https://docs.djangoproject.com/es/3.0/intro/overview/
https://tutorial.djangogirls.org/es/django_models/
http://django-marcador.keimlink.de/es/models.html
https://developer.mozilla.org/es/docs/Learn/Server-side/Django/Models
https://apuntes-snicoper.readthedocs.io/es/latest/programacion/python/django/migraciones_django.html

----------------------------
django.db.utils.OperationalError: 1045, Access denied for user using password : NO
C:\Users\LUZ\Envs\my_django_environment\my_django_project
#Comprobación tener instalado python
py -3 -V 
pip3 list

#Entorno Virtual
pip install virtualenvwrapper-win
mkvirtualenv my_django_environment

#Instalar DJango
pip install django

#Comprobación tener instalado Django
py -m django --version 

#Poner arriba un pequeño proyecto de prueba
mkdir django_test
cd django_test
-----------------------------------------------------------
django-admin startproject mytestsite
cd mytestsite

py manage.py runserver

#Checar en un navegador
http://127.0.0.1:8000/



workon my_django_environment
pip install pymysql
django-admin startproject my_django_project
python manage.py startapp my_django_project
SyntaxError: unexpected character after line ontinuation character

pip install PyMySQL==0.7.0


try2
https://www.dev2qa.com/how-to-run-python-in-eclipse-with-pydev/
https://www.dev2qa.com/hello-world-django-pycharm-example/

admin
https://www.dev2qa.com/how-to-make-a-website-with-python-and-django/

https://www.dev2qa.com/how-to-connect-mysql-database-in-django-project/

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
cd C:\Users\LUZ\Envs\my_django_environment\my_django_project
workon my_django_environment
py manage.py runserver
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

./manage.py check
python manage.py makemigrations saaacd
python manage.py migrate 
py manage.py runserver

---------------------------------
Las migraciones son muy potentes y permiten cambiar tus modelos con el tiempo, a medida que desarrolle su proyecto, sin la necesidad de eliminar la base de datos o las tablas y hacer otros nuevos - que se especializa en la actualización de su base de datos en vivo, sin perder datos. Recordamos la guía de tres pasos para hacer cambios en el modelo:
Cambiar los modelos (en models.py ).
Ejecutar python manage.py makemigrations para crear migraciones de esos cambios
Ejecutar python manage.py migrate para aplicar esos cambios a la base de datos.

#Migrations can be reversed with migrate by passing the number of the previous migration. For example, to reverse migration books.0003:
python manage.py migrate saaacd 0002

#If you want to reverse all migrations applied for an app, use the name zero:
 python manage.py migrate saaacd zero

#Esto solo comprueba si hay algun error en el modelo, pero no ejecuta nada.
python manage.py check saaacd

#Hacer saber a Django que hemos hecho cambios en nuestro modelo
python manage.py makemigrations saaacd

python manage.py makemigrations --name Actividad saaacd

#Django preparó un archivo de migración que ahora tenemos que aplicar a nuestra base de datos
python manage.py migrate saaacd

EXTRAA NECESARIO:
pip install django-model-utils   --Choices
pip install Pilow ---guardar imagenes
pip install whitenoise-- static files from angular
pip install djangorestframework
ng add @angular/material or  npm install --save @angular/material @angular/cdk
pip install django-filter ---filter rest url 
npm install --save ng-date-value-accessor
EXECUTE LIKE ADMINISTRATOR:
	C:\Users\LUZ\Envs\my_django_environment\my_django_project\angular-saaacd 
	npm install ngx-toastr --save
	npm install @angular/animations --save


#Puede verificar qué migraciones son necesarias sin crear realmente la migración, use la opción --dry-run, por ejemplo:
python manage.py makemigrations --dry-run


#Si se cambia el modelo de la base de datos existente, se necesita el siguiente comando para realizar los cambios necesarios.
python manage.py migrate --run-syncdb
-----------------------
Puedes leer la migración para su nuevo modelo si se quiere; que es el archivo polls/migrations/0001_initial.py . 
Para ver el SQL que generara cuando cree la db, usar sqlmigrate:
./manage.py sqlmigrate polls 0001

#######clean all
cd C:\Users\LUZ\Envs\my_django_environment\my_django_project
workon my_django_environment
python manage.py migrate saaacd zero
DROP TABLE IF EXISTS django_migrations;
#Eliminar los directorios app/migrations/(en nuestro caso: C:\Users\LUZ\Envs\my_django_environment\my_django_project\saaacd)
python manage.py makemigrations saaacd
python manage.py migrate --fake-initial saaacd

###cambios agregar fk
https://riptutorial.com/es/django/example/24498/cambiar-un-campo-de-caracteres-a-una-clave-foranea

#generate a service
ng generate service notification

 python manage.py createsuperuser
 celezte
 celezte308