{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/Activity.service.ts","./src/app/services/Message.service.ts","./src/app/views/activities/activities.component.ts","./src/app/views/activities/activities.component.html","./src/app/views/messages/messages.component.ts","./src/app/views/messages/messages.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ActivitiesComponent }      from './views/activities/activities.component';\n\nconst routes: Routes = [\n{ path: 'allActivities', component: ActivitiesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Tour of Activities';\n}\n\n","<h1>{{title}}</h1>\n<nav>\n  <a routerLink=\"/allActivities\">Activities</a>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n \nimport { AppRoutingModule }     from './app-routing.module'; \n \nimport { AppComponent } from './app.component';\nimport { ActivitiesComponent }      from './views/activities/activities.component';\nimport { MessagesComponent }    from './views/messages/messages.component';\n\n \n@NgModule({\n  declarations: [\n    AppComponent,\n\tActivitiesComponent,\n    MessagesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n\tFormsModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Activity } from '../models/Activity';\r\nimport { MessageService } from './Message.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivityService {\r\n\r\n  private activitiesUrl = '/activities';  // URL to web api\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService) { }\r\n\r\n  /** GET activities */\r\n  getActivities(): Observable<Activity[]> {\r\n    return this.http.get<Activity[]>(this.activitiesUrl)\r\n      .pipe(\r\n        tap(_ => this.log('fetched activities')),\r\n        catchError(this.handleError<Activity[]>('getActivities', []))\r\n      );\r\n  }\r\n\r\n   /* GET activities whose name contains search term */\r\n  searchActivities(term: string): Observable<Activity[]> {\r\n    if (!term.trim()) {\r\n      // if not search term, return empty activity array.\r\n      return of([]);\r\n    }\r\n    return this.http.get<Activity[]>(`${this.activitiesUrl}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n         this.log(`found activities matching \"${term}\"`) :\r\n         this.log(`no activities matching \"${term}\"`)),\r\n      catchError(this.handleError<Activity[]>('searchActivities', []))\r\n    );\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new activity to the server */\r\n  addActivity(activity: Activity): Observable<Activity> {\r\n    return this.http.post<Activity>(this.activitiesUrl, activity, this.httpOptions).pipe(\r\n      tap((newActivity: Activity) => this.log(`added activity w/ id=${newActivity.id}`)),\r\n      catchError(this.handleError<Activity>('addActivity'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the Activity */\r\n  deleteActivity(activity: Activity | number): Observable<Activity> {\r\n    const id = typeof activity === 'number' ? activity : activity.id;\r\n    const url = `${this.activitiesUrl}/${id}`;\r\n\r\n    return this.http.delete<Activity>(url, this.httpOptions).pipe(\r\n      tap(_ => this.log(`deleted activity id=${id}`)),\r\n      catchError(this.handleError<Activity>('deleteActivity'))\r\n    );\r\n  }\r\n\r\n  /** PUT: update the activity on the server */\r\n  updateActivity(activity: Activity): Observable<any> {\r\n    return this.http.put(this.activitiesUrl, activity, this.httpOptions).pipe(\r\n      tap(_ => this.log(`updated activity id=${activity.id}`)),\r\n      catchError(this.handleError<any>('updateActivity'))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a ActivityService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.add(`ActivityService: ${message}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Activity } from '../../models/Activity';\nimport { ActivityService } from '../../services/Activity.service';\n\n@Component({\n  selector: 'app-activities',\n  templateUrl: './activities.component.html',\n  styleUrls: ['./activities.component.css']\n})\nexport class ActivitiesComponent implements OnInit {\n  activities: Activity[];\n\n  constructor(private activityService: ActivityService) { }\n\n  ngOnInit() {\n    this.getActivities();\n  }\n\n  getActivities(): void {\n    this.activityService.getActivities()\n    .subscribe(activities => this.activities = activities);\n  }\n\n  delete(activity: Activity): void {\n    this.activities = this.activities.filter(a => a !== activity);\n    this.activityService.deleteActivity(activity).subscribe();\n  }\n\n}\n","<h2>My Heroes</h2>\n\n<div>\n  <label>Activity name:\n    <input #activityName />\n  </label>\n  <!-- (click) passes input value to add() and then clears the input \n  <button (click)=\"add(activityName.value); activityName.value=''\">\n    add\n  </button>-->\n</div>\n\n<ul class=\"activities\">\n  <li *ngFor=\"let activity of activities\">\n    <a routerLink=\"/detail/{{activity.id}}\">\n      <span class=\"badge\">{{activity.id}}</span> {{activity.name}}\n    </a>\n    <!--<button class=\"delete\" title=\"delete activity\"\n      (click)=\"delete(activity)\">x</button>-->\n  </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../services/Message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\"\n          (click)=\"messageService.clear()\">clear</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}