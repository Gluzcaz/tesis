"Test content for git tutorial"~
https://github.com/Gluzcaz/tesis

git config --global user.name "luz"
git config --global user.email luz.celezte@gmail.com

cd C:\Users\LUZ\Envs\my_django_environment

-- crear un repositorio nuevo, entonces no tendrás ningún repositorio remoto al que enviar cambios.
git init

----Una vez configurado el repositorio remoto, deberás añadir una URL de repositorio remoto a tu comando git config local y
---- configurar una rama de nivel superior para tus ramas locales.
git remote add luz https://github.com/Gluzcaz/tesis.git


--Añadir CommitTest.txt al entorno de ensayo de repositorio
git add CommitTest.txt

--Crea una nueva confirmación con un mensaje
git commit -m "Added Back-end Activity Creation"
----Crea una nueva rama llamada "feature_x" y cámbiate a ella usando
Crear un branch:
 git checkout -b saaacd
Mover a ese branch:
 git checkout feature_Create_Edit_Activity_Luz

Subit los cambios a tu rama remota
git push luz feature_Integrate_UI_Style

***********************EXTRA COMMANDS:
git config --list
git help config

--actualizar tu repositorio local al commit más nuevo, ejecuta
git pull remotename branchname
git pull luz main_saaacd

--Antes de fusionar los cambios, puedes revisarlos usando
git diff <source_branch> <target_branch>

--Fusionar esos conflictos manualmente al editar los archivos mostrados por git. Después de modificarlos, necesitas marcarlos como fusionados con
git add <filename>

--Para fusionar otra rama a tu rama activa (por ejemplo master), utiliza
git merge feature_Models_luz

--borra la rama local
git branch -d feauture_Models_luz

--eliminar una rama del repositorio remoto
git push luz :newBranch

--vuelve a la rama principal
git checkout master

--Quitar alguna carpeta o archivo del commit
git restore --staged saaacd/submodels/__pycache__/*

--Mostrar todas las ramas 
git branch -a

--Mostrar las ramas remotas
git branch -r

--there are three sets of branch names involved here:
	*Your local branches;
	*Your remote-tracking branches; and
	*Their branches (in the remote Git).
git remote show luz

------------PROCESO CREAR RAMAS-------------
--Crear la rama remota en la pagina web Git.
	Nota: Cuando creas una nueva rama tomará de base en la que estas colocado actualmente.
--Me traiga todas las ramas remotas(IMPORTANTE PARA PUSH Y MERGE)
	git fetch luz 
--En cmd crear la rama local con el mismo nombre de la remota:
	git checkout main_saaacd
	
	Y debe aparecer un mensaje :
		Branch 'main_saaacd' set up to track remote branch 'main_saaacd' from 'luz'
--Comprobamos con :
	git remote show luz

	
---Hacer merge de una rama feature_Models_luz
git checkout main_saaacd
git merge feature_Integrate_UI_Style
git push

---Stash
git stash
git stash apply

feature_Create_Edit_Activity_Luz
 feature_Integrate_UI_Style

----ERRORS:
--fatal: refusing to merge unrelated histories
Solution:
git pull luz main_saaacd --allow-unrelated-histories
https://www.educative.io/edpresso/the-fatal-refusing-to-merge-unrelated-histories-git-error